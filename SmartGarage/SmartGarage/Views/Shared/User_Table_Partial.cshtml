@model PaginatedList<GetUserDTO>

<div class="table">
    <table class="table table-dark table-hover">
        <thead>
            <tr style="line-height: 3px; width:auto" class="active">
                <th scope="col">#</th>
                <th>User Name</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int count = 1 + (Model.PageIndex - 1) * Model.PageSize;

                foreach (var item in Model.ItemsCollection)
                {

                    <tr style="line-height: 37px;" class="table-active">
                        <th scope="row">
                            @count
                        </th>
                        <td>@Html.DisplayFor(modelItem => item.UserName) </td>
                        <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                        <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td class="pr-5">
                            <a onclick="showInPopup('@Url.Action("Create", "Vehicle",new { id = item.Id }, Context.Request.Scheme)', 'Create Vehhicle')" class="btn btn-outline-success float-right text-white">Create Vehicle</a>
                            <a onclick="showInPopup('@Url.Action("Edit", "User", new { Id = item.Id }, Context.Request.Scheme)', 'Edit User')" class="btn btn-outline-warning float-right text-white">Edit</a>
                            <a onclick="showInPopup('@Url.Action("Delete", "User", new { Id = item.Id }, Context.Request.Scheme)', 'Delete User')" class="btn btn-outline-danger float-right text-white">Delete</a>
                            <a onclick="showInPopup('@Url.Action("Details", "User", new { Id = item.Id }, Context.Request.Scheme)', 'User Details')" class="btn btn-outline-info float-right text-white">Details</a>
                        </td>
                    </tr>
                    count++;
                }
            }
        </tbody>
    </table>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<nav aria-label="...">
    <ul class="pagination pb-3">
        @if (Model.PageIndex > 4 && Model.PageIndex + 3 < Model.TotalPages)
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#">1</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-whitek" href="#">@(Model.PageIndex-1)</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white active" href="#">@Model.PageIndex</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#">@(Model.PageIndex+1)</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            <li class="btn btn-outline-success text-white">
                <a class="btn btn-outline-success text-white" href="#">@Model.TotalPages</a>
            </li>
            <li class="btn btn-outline-success text-white">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>

        }
        else if (Model.PageIndex > 4 && Model.PageIndex + 3 >= Model.TotalPages)
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#">1</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            @for (int i = Model.TotalPages - 3; i <= Model.TotalPages; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white active" href="#">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white" href="#">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>
        }
        else if (Model.TotalPages > 4 && Model.PageIndex < 5)
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            @for (int i = 1; i <= 4; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white active" href="#">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white" href="#">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            <li>
                <a class="btn btn-outline-success text-white" href="#">@Model.TotalPages</a>
            </li>
            <li class="page-item">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item">
                        <a href="#" class="btn btn-outline-success text-white active">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a href="#" class="btn btn-outline-success text-white">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>
        }
    </ul>
</nav>
<input hidden id="page" value="@Model.PageIndex" />