@model PaginatedList<GetServiceDTO>

<table class="table table-dark table-hover">
    <thead>
        <tr style="line-height: 37px;">
            <th scope="row">
                <p class="m-0" style="width: 50px">#</p>
            </th>
            <th>
                <p class="m-0">Name</p>
            </th>
            <th>
                <p class="m-0">Price</p>
            </th>

            @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
            {
                <th>
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1 + (Model.PageIndex - 1) * Model.PageSize;

            foreach (var item in Model.ItemsCollection)
            {
                if (count % 2 != 0)
                {
                    <tr style="line-height: 37px;" class="table-active">
                        <td class="text-white">
                            @count
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)<b class="ml-1" style="font-size:10px;">EUR</b></td>

                        @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                        {
                            <td>
                                <a onclick="showInPopup('@Url.Action("Edit", "Service",new { id = item.Id }, Context.Request.Scheme)', 'Edit Service')" class="btn btn-outline-warning text-white">Edit</a>
                                <a onclick="showInPopup('@Url.Action("Delete", "Service", new { id = item.Id }, Context.Request.Scheme)', 'Delete Service')" class="btn btn-outline-danger text-white">Delete</a>
                            </td>
                        }
                    </tr>
                }
                else
                {
                    <tr style="line-height: 37px;">
                        <th>
                            @count
                        </th>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)<b class="ml-1" style="font-size:10px;">EUR</b></td>
                        @if (User.IsInRole("Admin") || User.IsInRole("Employee"))
                        {
                            <td>
                                <a onclick="showInPopup('@Url.Action("Edit", "Service",new { id = item.Id }, Context.Request.Scheme)', 'Edit Service')" class="btn btn-outline-warning text-white">Edit</a>
                                <a onclick="showInPopup('@Url.Action("Delete", "Service", new { id = item.Id }, Context.Request.Scheme)', 'Delete Service')" class="btn btn-outline-danger text-white">Delete</a>
                            </td>
                        }

                    </tr>
                }
                count++;
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<nav aria-label="...">
    <ul class="pagination">
        @if (Model.PageIndex > 4 && Model.PageIndex + 3 < Model.TotalPages)
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#">1</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-whitek" href="#">@(Model.PageIndex-1)</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white active" href="#">@Model.PageIndex</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#">@(Model.PageIndex+1)</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            <li class="btn btn-outline-success text-white">
                <a class="btn btn-outline-success text-white" href="#">@Model.TotalPages</a>
            </li>
            <li class="btn btn-outline-success text-white">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>

        }
        else if (Model.PageIndex > 4 && Model.PageIndex + 3 >= Model.TotalPages)
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#">1</a>
            </li>
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            @for (int i = Model.TotalPages - 3; i <= Model.TotalPages; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white active" href="#">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white" href="#">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>
        }
        else if (Model.TotalPages > 4 && Model.PageIndex < 5)
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            @for (int i = 1; i <= 4; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white active" href="#">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="btn btn-outline-success text-white" href="#">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a class="btn btn-outline-success text-white" href="#!">...</a>
            </li>
            <li>
                <a class="btn btn-outline-success text-white" href="#">@Model.TotalPages</a>
            </li>
            <li class="page-item">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a href="#" class="btn btn-outline-success text-white @prevDisabled" id="prev">Previous</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item">
                        <a href="#" class="btn btn-outline-success text-white active">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a href="#" class="btn btn-outline-success text-white">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a href="#" class="btn btn-outline-success text-white @nextDisabled" id="next">Next</a>
            </li>
        }
    </ul>
</nav>
<input hidden id="page" value="@Model.PageIndex" />