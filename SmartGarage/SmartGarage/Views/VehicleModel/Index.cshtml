@model PaginatedList<GetVehicleModelDTO>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr class="active">
            <th scope="row">
                <p>#</p>
            </th>
            <th>
                <p>Name</p>
            </th>
            <th>
                <p>Manufacturer</p>
            </th>
            <th>
                <p>Vehicle type</p>
            </th>
            <th>
                <p>Actions</p>
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1 + (Model.PageIndex - 1) * Model.PageSize;

            foreach (var item in Model.ItemsCollection)
            {
                if (count % 2 != 0)
                {
                    <tr class="table-active">
                        <th scope="row">
                            @count
                        </th>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.ManafacturerName)</td>
                        <td>@Html.DisplayFor(modelItem => item.VehicleType)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <th scope="row">
                            @count
                        </th>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.ManafacturerName)</td>
                        <td>@Html.DisplayFor(modelItem => item.VehicleType)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                    </tr>
                }
                count++;
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)" class="btn btn-default @prevDisabled">Previous</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)" class="btn btn-default @nextDisabled">Next</a>