@model PaginatedList<GetServiceDTO>

<form asp-controller="Service" asp-action="IndexCustomer">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="numberPlate" placeholder="Search by Name" />
            <input type="submit" value="Search" class="btn btn-outline-success" />
        </p>
    </div>
</form>

<form asp-controller="Service" asp-action="IndexCustomer">
    <div class="form-actions no-color">
        <p>
            <input type="datetime" name="date" placeholder="DD/MM/YYYY" />
            <input type="submit" value="Search" class="btn btn-outline-success" />
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr class="active">
            <th scope="row">
                <p style="width: 50px">#</p>
            </th>
            <th>
                <p>Name</p>
            </th>
            <th>
                <p>Price</p>
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1 + (Model.PageIndex - 1) * Model.PageSize;

            foreach (var item in Model.ItemsCollection)
            {
                if (count % 2 != 0)
                {
                    <tr class="table-active">
                        <th scope="row">
                            @count
                        </th>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.ServiceId">Details</a>
                        </td>                        
                    </tr>
                }
                else
                {
                    <tr>
                        <th scope="row">
                            @count
                        </th>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.ServiceId">Details</a>
                        </td>                        
                    </tr>
                }
                count++;
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<nav aria-label="...">
    <ul class="pagination">
        @if (Model.PageIndex > 4 && Model.PageIndex + 3 < Model.TotalPages)
        {
            <li class="page-item disabled">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)"
                class="btn btn-primary @prevDisabled">Previous</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="">1</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#!">...</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)">@(Model.PageIndex-1)</a>
            </li>
            <li class="page-item active">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.PageIndex">@Model.PageIndex</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)">@(Model.PageIndex+1)</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#!">...</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages">@Model.TotalPages</a>
            </li>
            <li class="page-item">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)"
                class="btn btn-primary @nextDisabled">Next</a>
            </li>

        }
        else if (Model.PageIndex > 4 && Model.PageIndex + 3 >= Model.TotalPages)
        {
            <li class="page-item disabled">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)"
                class="btn btn-primary @prevDisabled">Previous</a>
            </li>
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-pageNumber="">1</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#!">...</a>
            </li>
            @for (int i = Model.TotalPages - 3; i <= Model.TotalPages; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item active">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)"
                class="btn btn-primary @nextDisabled">Next</a>
            </li>
        }
        else if (Model.TotalPages > 4 && Model.PageIndex < 5)
        {
            <li class="page-item disabled">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)"
                class="btn btn-primary @prevDisabled">Previous</a>
            </li>
            @for (int i = 1; i <= 4; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item active">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a class="page-link" href="#!">...</a>
            </li>
            <li>
                <a class="page-link" asp-action="Index" asp-route-pageNumber="@Model.TotalPages">@Model.TotalPages</a>
            </li>
            <li class="page-item">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)"
                class="btn btn-primary @nextDisabled">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex-1)"
                class="btn btn-primary @prevDisabled">Previous</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item active">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }
            }
            <li class="page-item">
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex+1)"
                class="btn btn-primary @nextDisabled">Next</a>
            </li>
        }
    </ul>
</nav>
